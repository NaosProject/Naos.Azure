// --------------------------------------------------------------------------------------------------------------------
// <copyright file="AzureDummyFactory.cs" company="Naos Project">
//    Copyright (c) Naos Project 2019. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package Naos.Build.Conventions.VisualStudioProjectTemplates.Domain.Test (1.55.57)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.Azure.Domain.Test
{
    using System;
    using System.Collections.Generic;
    using FakeItEasy;
    using Naos.Database.Domain;
    using OBeautifulCode.Assertion.Recipes;
    using OBeautifulCode.AutoFakeItEasy;
    using OBeautifulCode.Serialization;

    /// <summary>
    /// A Dummy Factory for types in <see cref="Naos.Azure.Domain"/>.
    /// </summary>
#if !NaosAzureSolution
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCode("Naos.Azure.Domain.Test", "See package version number")]
    internal
#else
    public
#endif
    class AzureDummyFactory : DefaultAzureDummyFactory
    {
        public AzureDummyFactory()
        {
            /* Add any overriding or custom registrations here. */

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () =>
                {
                    var locators = A.Dummy<IReadOnlyCollection<ConnectionStringBlobContainerResourceLocator>>();
                    locators.Count.MustForTest().BeGreaterThanOrEqualTo(1);

                    var streamAccessKinds = A.Dummy<StreamAccessKinds>().ThatIsNot(StreamAccessKinds.None);

                    return new AzureBlobStandardStreamConfig(
                        A.Dummy<string>(),
                        streamAccessKinds,
                        A.Dummy<SerializerRepresentation>(),
                        A.Dummy<SerializationFormat>(),
                        locators);
                });
        }
    }
}